1. PYTHONPATH & Package & module
	|- python解释器
		|- pyc/pyo
		|- pydoc

	|- _  保护 
	   __ 私有
	   __***__ 系统




- 1.1. Python package与系统的路径一样
	__init__.py
- 1.2. 解释器管理文件的时候，把文件目录分成两个部分：
	|- PYTHONPATH：解释器搜索（默认当前路径作为PYTHONPATH）
		| - 解释器搜索模块，package的时候在PYTHONPATH指定的路径去搜索
		|- python命令行执行的文件，是系统格式	
				|- 使用模块执行，-m
	|- 所有的包路径，模块搜索的顺序
		|- 当前路径
		|- site-package
		|- PYTHONPATH


	|- package：解释器执行的时候，在PYTHON指定的路径下搜索


-1.3. pyc文件
	|- 第一次作为模块加载，会自定产生
	|- python -m  py_compile  pk1/pk2/mod2.py 

- 1.4. 优化运行
	- O -OO

-1.5. 文档工具
	pydoc3  查看帮助，启动帮助的文档服务
	python -m pydoc



-1.6. 限制访问
	没有：public
	_：protected
	__：私有
	__ ** __：系统


备注：
	Qt
	kivy

2. 重构项目
	2.1 - 项目环境
		|- 解释器
		|- 模块库

	2.2 路径
		 |- 包
		 	|- 模块

		检测手段
			|- pydoc3 模块，包，类，函数
			|- python -m pydoc  模块，包，类，函数 
	2.3 完成main
		|- 完成组合类
			|- 实现被组合的类
			|- 组合
			|- 在main构造Qt的运行环境QApplication

	2.4 通过聚合关系的方式形成类之间的协作（调用）
		|- 辅助类：
			| -实现一个Qt的多线程类
				|- 调用父类构造器
				|- 覆盖run函数，实现并发的功能实现；
			|- 创建对象
			|- 时间UI与Helper的聚合

		|- 业务流程-1
			|- 登录（辅助类）
			|- 返回二维码（辅助类）
				|- 采用的不是传统的参数传递的方式
				|- 消息发送机制
					|- 信号与槽
					    |- 函数原型就是信号：（1）发送者的类中间定义，（2）发送信号；一定在QObject的子类中定义信号
					    |- 槽是被调用的实现：信号绑定一个槽函数
			|- 显示二维码 （登录窗体）
				1. img_qr = QImage.fromData(qrcode)
				2. pix_qr = QPixmap.fromImage(img_qr)
				3. 设置标签组件的内容是图像：

			|- 扫描二维码（用户）

			|- 返回登录状态（辅助类）
				定义信号，发送信号
			|- 结束登录状态（组合应用类）
				关闭登录，显示聊天
				|- 关闭登录窗体，显示聊天创
		
		|- 业务流程-2

			|- 请求一个用户列表
			|- 显示用户列表
				MVC（V M C）
				QStandardItemModel（数据容器）
					|- QStandardItem 数据项
						|- 图像
						|- 数据
						|- 额外数据项。setData(不显示)
			|- 选择：
				列表框
					信号：clicked->处理函数（index参数）
				得到数据（用户：当前用户）
					index获取，从model获取
				向用户发送信息

			|- 接收用户信息


3. 课程内容的安排
	
	数据岗位
		|- 数据采集（爬虫）
		|- 数据基础分析（Pandas，SQL）
		|- 数据可视化
		|- 数据挖掘与智能分析（机器学习：10-14）
			|- API写一个应用
			|- 调优
			|- 原生实现
				|- numpy
				|- scipy
				|- tensorflow等框架

		|- 人工智能（7天）
			|- 深度学习
				|- 人脸，手写数字
				|- 语音
				|- 自然语言

		|- 区块链（4天）
			|- 搭建以太坊的私有链
			|- python，go数据上链，简单的实现智能合约的交易
			|- DApp		


Qt的帮助文档：https://www.riverbankcomputing.com/static/Docs/PyQt5/

作业：
	完成微信聊天程序。





